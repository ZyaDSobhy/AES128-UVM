$date
	Sat Feb 18 04:49:59 2023
$end
$version
	QuestaSim Version 2021.3
$end
$timescale
	1ns
$end

$scope module Tbench_top $end

$scope module mem_16_32 $end
$var parameter 32 ! ADDR_WIDTH $end
$var parameter 32 " DATA_WIDTH $end
$var parameter 32 # DEPTH $end
$var wire 1 $ clk $end
$var wire 1 % rst_n $end
$var wire 1 & en $end
$var wire 1 ' wr $end
$var wire 1 ( addr [31] $end
$var wire 1 ) addr [30] $end
$var wire 1 * addr [29] $end
$var wire 1 + addr [28] $end
$var wire 1 , addr [27] $end
$var wire 1 - addr [26] $end
$var wire 1 . addr [25] $end
$var wire 1 / addr [24] $end
$var wire 1 0 addr [23] $end
$var wire 1 1 addr [22] $end
$var wire 1 2 addr [21] $end
$var wire 1 3 addr [20] $end
$var wire 1 4 addr [19] $end
$var wire 1 5 addr [18] $end
$var wire 1 6 addr [17] $end
$var wire 1 7 addr [16] $end
$var wire 1 8 addr [15] $end
$var wire 1 9 addr [14] $end
$var wire 1 : addr [13] $end
$var wire 1 ; addr [12] $end
$var wire 1 < addr [11] $end
$var wire 1 = addr [10] $end
$var wire 1 > addr [9] $end
$var wire 1 ? addr [8] $end
$var wire 1 @ addr [7] $end
$var wire 1 A addr [6] $end
$var wire 1 B addr [5] $end
$var wire 1 C addr [4] $end
$var wire 1 D addr [3] $end
$var wire 1 E addr [2] $end
$var wire 1 F addr [1] $end
$var wire 1 G addr [0] $end
$var wire 1 H data_in [31] $end
$var wire 1 I data_in [30] $end
$var wire 1 J data_in [29] $end
$var wire 1 K data_in [28] $end
$var wire 1 L data_in [27] $end
$var wire 1 M data_in [26] $end
$var wire 1 N data_in [25] $end
$var wire 1 O data_in [24] $end
$var wire 1 P data_in [23] $end
$var wire 1 Q data_in [22] $end
$var wire 1 R data_in [21] $end
$var wire 1 S data_in [20] $end
$var wire 1 T data_in [19] $end
$var wire 1 U data_in [18] $end
$var wire 1 V data_in [17] $end
$var wire 1 W data_in [16] $end
$var wire 1 X data_in [15] $end
$var wire 1 Y data_in [14] $end
$var wire 1 Z data_in [13] $end
$var wire 1 [ data_in [12] $end
$var wire 1 \ data_in [11] $end
$var wire 1 ] data_in [10] $end
$var wire 1 ^ data_in [9] $end
$var wire 1 _ data_in [8] $end
$var wire 1 ` data_in [7] $end
$var wire 1 a data_in [6] $end
$var wire 1 b data_in [5] $end
$var wire 1 c data_in [4] $end
$var wire 1 d data_in [3] $end
$var wire 1 e data_in [2] $end
$var wire 1 f data_in [1] $end
$var wire 1 g data_in [0] $end
$var reg 32 h data_out [31:0] $end
$var reg 1 i valid_out $end
$var integer 32 j i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx h
xi
b100000 !
b100000 "
b100000 #
bx j
0$
x%
x&
x'
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
$end
#5
1$
1%
#10
0$
#15
1$
#20
0$
#25
1$
1&
0'
0%
b0 j
b1 j
b10 j
b11 j
b100 j
b101 j
b110 j
b111 j
b1000 j
b1001 j
b1010 j
b1011 j
b1100 j
b1101 j
b1110 j
b1111 j
b10000 j
b10001 j
b10010 j
b10011 j
b10100 j
b10101 j
b10110 j
b10111 j
b11000 j
b11001 j
b11010 j
b11011 j
b11100 j
b11101 j
b11110 j
b11111 j
b100000 j
0i
#30
0$
#35
1$
b0 j
b1 j
b10 j
b11 j
b100 j
b101 j
b110 j
b111 j
b1000 j
b1001 j
b1010 j
b1011 j
b1100 j
b1101 j
b1110 j
b1111 j
b10000 j
b10001 j
b10010 j
b10011 j
b10100 j
b10101 j
b10110 j
b10111 j
b11000 j
b11001 j
b11010 j
b11011 j
b11100 j
b11101 j
b11110 j
b11111 j
b100000 j
#40
0$
#45
1$
b0 j
b1 j
b10 j
b11 j
b100 j
b101 j
b110 j
b111 j
b1000 j
b1001 j
b1010 j
b1011 j
b1100 j
b1101 j
b1110 j
b1111 j
b10000 j
b10001 j
b10010 j
b10011 j
b10100 j
b10101 j
b10110 j
b10111 j
b11000 j
b11001 j
b11010 j
b11011 j
b11100 j
b11101 j
b11110 j
b11111 j
b100000 j
1'
1f
1e
1c
1G
1E
1D
1C
1%
#50
0$
#55
1$
1g
0f
1d
1F
0E
#60
0$
#65
1$
0g
0c
0G
1E
#70
0$
#75
1$
1g
1f
0e
1c
1G
0F
0E
0C
#80
0$
#85
1$
0g
0c
0G
1E
#90
0$
#95
1$
1g
1e
0d
1F
0E
#100
0$
